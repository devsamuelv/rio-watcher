/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'java-gradle-plugin'                           
    id 'maven-publish'                                
    id 'com.gradle.plugin-publish' version '0.16.0'   
}

group = 'com.devsamuelv' 
version = '1.1.4'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

pluginBundle {
    // These settings are set for the whole plugin bundle
    website = 'https://github.com/devsamuelv/rio-watcher'
    vcsUrl = 'https://github.com/devsamuelv/rio-watcher'
    tags = ['frc', "debugging"]
}

gradlePlugin {
    plugins {
        rioWatcher {
            id = 'com.devsamuelv.rio.watcher'
            description = 'Frc robot data logger for debugging'
            displayName = 'rio watcher'
            implementationClass = 'com.devsamuelv.rio.watcher.Watcher'

            // mavenCoordinates {
            //     groupId = 'com.devsamuelv'
            // }
        }
    }
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
